AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  portfolio-api
  
  Sample SAM Template for portfolio-api

Globals:
  Function:
    Timeout: 5

Parameters:
  DSN:
    Type: String
    Default: /portfolio/dsn

Resources:
  PostRSSFeedsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/post_rss_feeds
      Handler: post_rss_feeds
      Runtime: go1.x
      Architectures:
        - x86_64
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /rss_feeds
            Method: POST
      Environment:
        Variables:
          DSN: !Ref DSN
      Role: !GetAtt LambdaExecutionRole.Arn
  UpdateBlogDataFromRSSJob:
      Type: AWS::Serverless::Function
      Properties:
          CodeUri: job
          Handler: update-blog-data-from-rss
          Runtime: go1.x
          Events:
              UpdateBlogDataFromRSS:
                  Type: Schedule
                  Properties:
                      Schedule: cron(* * * * ? *) 
      Environment:
        Variables:
          DSN: !Ref DSN
      Role: !GetAtt LambdaExecutionRole.Arn
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub lambda-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: "lambda-secretmanager-policy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Effect: "Allow"
                Action:
                    - "ssm:*"
                Resource: "*"
Outputs:
  API:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  HelloWorldFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt PostRSSFeedsFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt LambdaExecutionRole.Arn
  UpdateBlogDataFromRSSJob:
    Value: !GetAtt UpdateBlogDataFromRSSJob.Arn
