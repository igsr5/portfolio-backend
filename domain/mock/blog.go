// Code generated by MockGen. DO NOT EDIT.
// Source: ./domain/blog.go

// Package mock_domain is a generated GoMock package.
package mock_domain

import (
	context "context"
	domain "portfolio-backend/domain"
	reflect "reflect"

	events "github.com/aws/aws-lambda-go/events"
	gomock "github.com/golang/mock/gomock"
	blogs_pb "github.com/igsr5/portfolio-proto/go/lib/blogs"
)

// MockBlogRepository is a mock of BlogRepository interface.
type MockBlogRepository struct {
	ctrl     *gomock.Controller
	recorder *MockBlogRepositoryMockRecorder
}

// MockBlogRepositoryMockRecorder is the mock recorder for MockBlogRepository.
type MockBlogRepositoryMockRecorder struct {
	mock *MockBlogRepository
}

// NewMockBlogRepository creates a new mock instance.
func NewMockBlogRepository(ctrl *gomock.Controller) *MockBlogRepository {
	mock := &MockBlogRepository{ctrl: ctrl}
	mock.recorder = &MockBlogRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogRepository) EXPECT() *MockBlogRepositoryMockRecorder {
	return m.recorder
}

// CreateBlogFromManualItem mocks base method.
func (m *MockBlogRepository) CreateBlogFromManualItem(ctx context.Context, input blogs_pb.CreateBlogRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBlogFromManualItem", ctx, input)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateBlogFromManualItem indicates an expected call of CreateBlogFromManualItem.
func (mr *MockBlogRepositoryMockRecorder) CreateBlogFromManualItem(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBlogFromManualItem", reflect.TypeOf((*MockBlogRepository)(nil).CreateBlogFromManualItem), ctx, input)
}

// GetBlog mocks base method.
func (m *MockBlogRepository) GetBlog(ctx context.Context, id string) (*domain.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlog", ctx, id)
	ret0, _ := ret[0].(*domain.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlog indicates an expected call of GetBlog.
func (mr *MockBlogRepositoryMockRecorder) GetBlog(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlog", reflect.TypeOf((*MockBlogRepository)(nil).GetBlog), ctx, id)
}

// GetBlogs mocks base method.
func (m *MockBlogRepository) GetBlogs(ctx context.Context) ([]*domain.Blog, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlogs", ctx)
	ret0, _ := ret[0].([]*domain.Blog)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlogs indicates an expected call of GetBlogs.
func (mr *MockBlogRepositoryMockRecorder) GetBlogs(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlogs", reflect.TypeOf((*MockBlogRepository)(nil).GetBlogs), ctx)
}

// MockBlogHandler is a mock of BlogHandler interface.
type MockBlogHandler struct {
	ctrl     *gomock.Controller
	recorder *MockBlogHandlerMockRecorder
}

// MockBlogHandlerMockRecorder is the mock recorder for MockBlogHandler.
type MockBlogHandlerMockRecorder struct {
	mock *MockBlogHandler
}

// NewMockBlogHandler creates a new mock instance.
func NewMockBlogHandler(ctrl *gomock.Controller) *MockBlogHandler {
	mock := &MockBlogHandler{ctrl: ctrl}
	mock.recorder = &MockBlogHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBlogHandler) EXPECT() *MockBlogHandlerMockRecorder {
	return m.recorder
}

// BatchGetBlogs mocks base method.
func (m *MockBlogHandler) BatchGetBlogs(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BatchGetBlogs", request)
	ret0, _ := ret[0].(events.APIGatewayProxyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BatchGetBlogs indicates an expected call of BatchGetBlogs.
func (mr *MockBlogHandlerMockRecorder) BatchGetBlogs(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BatchGetBlogs", reflect.TypeOf((*MockBlogHandler)(nil).BatchGetBlogs), request)
}

// CreateBlog mocks base method.
func (m *MockBlogHandler) CreateBlog(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBlog", request)
	ret0, _ := ret[0].(events.APIGatewayProxyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBlog indicates an expected call of CreateBlog.
func (mr *MockBlogHandlerMockRecorder) CreateBlog(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBlog", reflect.TypeOf((*MockBlogHandler)(nil).CreateBlog), request)
}

// GetBlog mocks base method.
func (m *MockBlogHandler) GetBlog(request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBlog", request)
	ret0, _ := ret[0].(events.APIGatewayProxyResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBlog indicates an expected call of GetBlog.
func (mr *MockBlogHandlerMockRecorder) GetBlog(request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBlog", reflect.TypeOf((*MockBlogHandler)(nil).GetBlog), request)
}
